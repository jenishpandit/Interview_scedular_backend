{
  "openapi": "3.0.0",
  "info": {
    "title": "Interview Scheduler API",
    "description": "API documentation for Interview Scheduler application",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "JWT": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Registration successful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to obtain access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NzY3NjIyNzZlZDgxODkwNWFiZmJkNSIsImVtYWlsIjoiZmFpemFuMkBnbWFpbC5jb20iLCJpYXQiOjE3MTkwNDAwNzEsImV4cCI6MTcyMTYzMjA3MX0.LlZl8wHA7I3pFOnbbhhAdhnlJImKRaVYvrpeArqTUUA"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/candidate": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create Candidate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Candidate Created Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/CandidateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get all Candidates",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search term to filter candidates"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success.."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CandidateResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "candidate/role": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get Candidates Job Role",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success.."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CandidateRoleResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/candidate/{id}": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get Candidate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Candidate ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success."
                    },
                    "data": {
                      "$ref": "#/components/schemas/CandidateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update Candidate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Candidate ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate Updated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Candidate Updated Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/CandidateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Candidate"
        ],
        "summary": "Delete Candidate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Candidate ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate Deleted Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Candidate Deleted Successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/technology": {
      "post": {
        "tags": [
          "Technology"
        ],
        "summary": "Create technology",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechnologyBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Candidate Created Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/CandidateResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Technology"
        ],
        "summary": "Get all technologies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "All Technology data showed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "All Technology data showed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TechnologyResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/technology/{id}": {
      "get": {
        "tags": [
          "Technology"
        ],
        "summary": "Get Technology",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Technology ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Technology data showed by ID Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Technology data showed by ID Successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TechnologyResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Technology"
        ],
        "summary": "Update Technology",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Technology ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechnologyBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Technology Updated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Technology Updated Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/TechnologyResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Technology"
        ],
        "summary": "Delete Technology",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Technology ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Technology Deleted Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Technology Deleted Successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/interview": {
      "post": {
        "tags": [
          "Interview"
        ],
        "summary": "Create Interview",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interview data Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Interview Created Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/InterviewResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Interview"
        ],
        "summary": "Get all Interviews",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search term to filter candidates"
          }
        ],
        "responses": {
          "200": {
            "description": "All Interview data showed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "All Interview data showed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InterviewResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/interview/{id}": {
      "get": {
        "tags": [
          "Interview"
        ],
        "summary": "Get Interview",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Interview ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Interview data showed by ID Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Interview data showed by ID Successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/InterviewResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Interview"
        ],
        "summary": "Update Interview",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Interview ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interview Updated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Interview Updated Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/InterviewResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Interview"
        ],
        "summary": "Delete Interview",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Interview ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Interview Deleted Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Interview Deleted Successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/note": {
      "post": {
        "tags": [
          "Note"
        ],
        "summary": "Create Note",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Interview data Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Note Created Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/NoteResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get all Note",
        "responses": {
          "200": {
            "description": "All Note data showed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "All Note data showed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NoteResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/note/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Note ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Note data showed by ID Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Note data showed by ID Successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NoteResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Note"
        ],
        "summary": "Update Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Note ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note Updated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Note Updated Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/NoteResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Note"
        ],
        "summary": "Delete Note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Note ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Note Deleted Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Note Deleted Successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/questions": {
      "post": {
        "tags": [
          "Question and Answer"
        ],
        "summary": "Create Question and Answer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QnABody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Question and Answer created successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Question and Answer Created Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/QnAResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Question and Answer"
        ],
        "summary": "Get all Question and Answer",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success.."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QnAResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/questions/{id}": {
      "get": {
        "tags": [
          "Question and Answer"
        ],
        "summary": "Get Question and Answer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "QnA ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success."
                    },
                    "data": {
                      "$ref": "#/components/schemas/QnAResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Question and Answer"
        ],
        "summary": "Update Question and Answer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "QnA ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QnABody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Question and Answer Updated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Question and Answer Updated Successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/QnAResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Question and Answer"
        ],
        "summary": "Delete Question and Answer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "QnA ID",
            "schema": {
              "type": "string"
            },
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Question and Answer Deleted Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Question and Answer Deleted Successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "dashboard/total": {
      "get": {
        "tags": [
          "DashBoard"
        ],
        "summary": "Get Candidates, Technology, Interview",
        "responses": {
          "200": {
            "description": " All Total of Candidates, Technology, Interview showed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": " All Total of Candidates, Technology, Interview Successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DashBoard"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "faizan2@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "CandidateBody": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Goku"
          },
          "last_name": {
            "type": "string",
            "example": "Saiyan"
          },
          "email": {
            "type": "string",
            "example": "faizan2@gmail.com"
          },
          "phone_number": {
            "type": "string",
            "example": "1234567678"
          },
          "skills": {
            "type": "[string]",
            "example": "Object ID"
          },
          "type": {
            "type": "string",
            "example": "office"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "job_role": {
            "type": "string",
            "example": "Full stack Devaloper"
          },
          "resume": {
            "type": "string",
            "example": "Resume File"
          }
        }
      },
      "TechnologyBody": {
        "type": "object",
        "properties": {
          "technology_name": {
            "type": "string",
            "example": "C++",
            "required": true
          }
        }
      },
      "InterviewBody": {
        "type": "object",
        "properties": {
          "candidate_id": {
            "type": "objectId",
            "example": "objectId",
            "required": true
          },
          "created_by": {
            "type": "objectId",
            "example": "objectId",
            "required": true
          },
          "interview_date": {
            "type": "Date",
            "example": "date",
            "required": true
          },
          "interview_type": {
            "type": "string",
            "example": "Online",
            "required": true
          },
          "round": {
            "type": "string",
            "example": "HR round",
            "required": true
          },
          "location": {
            "type": "String",
            "example": "Surat",
            "required": true
          },
          "status": {
            "type": "string",
            "example ": "create",
            "required": true
          }
        }
      },
      "NoteBody": {
        "type": "object",
        "properties": {
          "interview_id":{
           "type":"objectId",
           "example":"objectId"
          },
          "candidate":{
            "type":"objectId",
            "example":"objectId"
          },
          "note_text": {
            "type": "string",
            "example": "This is sample note"
          }
        }
      },
      "QnABody": {
        "type": "object",
        "properties": {
          "technology": {
            "type": "objectId",
            "required": true,
            "example": "objectId"
          },
          "question": {
            "type": "String",
            "required": true,
            "example": "react framework is made up of which language"
          },
          "answer": {
            "type": "String",
            "required": true,
            "example": "react is js framework"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6676762276ed818905abfbd5"
          },
          "email": {
            "type": "string",
            "example": "faizan2@gmail.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-06-22T06:58:42.911Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-06-22T06:58:42.911Z"
          }
        }
      },
      "CandidateResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Goku"
          },
          "last_name": {
            "type": "string",
            "example": "Saiyan"
          },
          "email": {
            "type": "string",
            "example": "faizan2@gmail.com"
          },
          "phone_number": {
            "type": "string",
            "example": "1234567678"
          },
          "skills": {
            "type": "[string]",
            "example": "Object ID"
          },
          "type": {
            "type": "string",
            "example": "office"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "job_role": {
            "type": "string",
            "example": "Full stack Devaloper"
          },
          "resume": {
            "type": "string",
            "example": "Resume File"
          }
        }
      },
      "CandidateRoleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string[]",
            "example": [
              "Product Manager - IT",
              "Quality Assurance Engineer",
              "Scrum Master",
              "Security Engineer",
              "Software Engineer"
            ]
          }
        }
      },
      "TechnologyResponse": {
        "type": "object",
        "properties": {
          "technology_name": {
            "type": "string",
            "example": "C++"
          }
        }
      },
      "InterviewResponse": {
        "type": "object",
        "properties": {
          "candidate_id": {
            "type": "objectId",
            "example": "66719260e281ef29a9375f9b"
          },
          "created_by": {
            "type": "objectId",
            "example": "667129fc98c7c4dd7e2956b4"
          },
          "interview_date": {
            "type": "Date",
            "example": "10-10-10"
          },
          "interview_type": {
            "type": "string",
            "example": "Online"
          },
          "round": {
            "type": "string",
            "example": "HR round"
          },
          "location": {
            "type": "String",
            "example": "Surat"
          },
          "status": {
            "type": "string",
            "example":"create"
          } 
        }
      },
      "NoteResponse": {
        "type": "object",
        "properties": {
          "interview_id": {
            "type": "objectId",
            "example": "66719260e281ef29a9375f9b"
          },
          "candidate": {
            "type": "objectId",
            "example": "667129fc98c7c4dd7e2956b4"
          },
          "note_text": {
            "type": "string",
            "example": "This is sample note"
          }
        }
      },
      "QnAResponse": {
        "type": "object",
        "properties": {
          "technology": {
            "type": "objectId",
            "example": "6685221f4ac0e03fc6e3cce7"
          },
          "question": {
            "type": "String",
            "example": "react framework is made up of which language"
          },
          "answer": {
            "type": "String",
            "example": "react is js framework"
          }
        }
      },
      "DashBoard": {
        "type": "object",
        "properties": {
          "candidateTotal": {
            "type": "integer",
            "example": 3
          },
          "technologyTotal": {
            "type": "integer",
            "example": 4
          },
          "interviewTotal": {
            "type": "integer",
            "example": 5
          }
        }
      }
    }
  }
}